Alembic - Database Migration Tool

Alembic is a lightweight database migration tool for usage with the SQLAlchemy Database Toolkit for Python.

Key Commands:

1. Create a new migration:
   alembic revision --autogenerate -m "Description of the changes"

   Use this when you've made changes to your SQLAlchemy models and want to create a migration script to apply these changes to the database.

2. Apply all pending migrations:
   alembic upgrade head

   Run this command to apply all unapplied migrations to your database, bringing it up to date with your latest model changes.

3. Downgrade the database:
   alembic downgrade -1

   This reverts the last applied migration. Useful if you need to undo recent changes.

4. View migration history:
   alembic history

   Shows the history of applied migrations.

5. View current database version:
   alembic current

   Displays the current revision of the database.

6. Apply or revert to a specific migration:
   alembic upgrade <revision_id>
   alembic downgrade <revision_id>

   Use these when you need to move to a specific point in your migration history.

Best Practices:
1. Always review autogenerated migrations before applying them.
2. Test migrations on a copy of your production data before applying to production.
3. Back up your database before applying migrations.
4. Keep migrations small and focused on specific changes.
5. Include both 'upgrade' and 'downgrade' operations in your migrations.

Remember: The 'env.py' file configures how Alembic interacts with your application. Ensure it correctly imports your SQLAlchemy models.

For more detailed information, refer to the Alembic documentation:
https://alembic.sqlalchemy.org/en/latest/